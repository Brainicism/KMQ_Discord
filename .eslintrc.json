{
    "extends": [
        "airbnb-typescript/base", "prettier"
    ],
    "plugins": [
        "eslint-plugin-tsdoc",
        "jsdoc",
        "only-warn",
        "import"
    ],
    "parserOptions": {
        "project": "./tsconfig.json"
    },
    "rules": {
        "@typescript-eslint/indent": [
            "off"
        ],
        "@typescript-eslint/quotes": [
            "warn",
            "double"
        ],
        "@typescript-eslint/explicit-function-return-type": [
            "warn",
            {
                "allowExpressions": true
            }
        ],
        "@typescript-eslint/type-annotation-spacing": [
            "warn"
        ],
        "import/no-cycle": [
            "off"
        ],
        "jsdoc/require-jsdoc": [
            "warn",
            {
                "publicOnly": true
            }
        ],
        "valid-jsdoc": [
            "warn",
            {
                "requireReturnType": false,
                "requireParamType": false,
                "requireReturn": false
            }
        ],
        "tsdoc/syntax": [
            "warn"
        ],
        "lines-between-class-members": [
            "off"
        ],
        "max-len": [
            "warn",
            {
                "ignoreStrings": true,
                "ignoreTemplateLiterals": true,
                "code": 200
            }
        ],
        "no-restricted-syntax": [
            "warn",
            {
                "selector": "CallExpression[callee.property.name='forEach']",
                "message": "Do not use `forEach()`, use `for/of` instead"
            }
        ],
        "no-await-in-loop": [
            "off"
        ],
        "no-continue": [
            "off"
        ],
        "no-plusplus": [
            "off"
        ],
        "no-async-promise-executor": [
            "off"
        ],
        "@typescript-eslint/lines-between-class-members": [
            "off"
        ],
        "no-param-reassign": [
            "off"
        ],
        "object-curly-newline": [
            "off"
        ],
        "@typescript-eslint/no-unused-vars": [
            "warn",
            {
                "argsIgnorePattern": "^_"
            }
        ],
        "@typescript-eslint/member-ordering": [
            "warn",
            {
                "default": [
                    "public-field",
                    "protected-field",
                    "private-field",
                    "public-method",
                    "protected-method",
                    "private-method"
                ]
            }
        ],
        "prefer-destructuring": [
            "off"
        ],
        "func-names": [
            "off"
        ],
        "no-bitwise": [
            "off"
        ],
        "@typescript-eslint/dot-notation": [
            "off"
        ],
        "no-multi-str": [
            "off"
        ],
        "no-multi-spaces": [
            "warn"
        ],
        "radix": [
            "off"
        ],
        "no-lonely-if": [
            "off"
        ],
        "no-console": [
            "off"
        ],
        "quote-props": [
            "off"
        ],
        "padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "prev": "block-like",
                "next": "*"
            },
            {
                "blankLine": "always",
                "prev": "multiline-expression",
                "next": "multiline-expression"
            },
            {
                "blankLine": "always",
                "prev": "multiline-let",
                "next": "*"
            },
            {
                "blankLine": "always",
                "prev": "multiline-const",
                "next": "*"
            },
            {
                "blankLine": "always",
                "prev": "multiline-block-like",
                "next": "*"
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": "function"
            }
        ]
    }
}
