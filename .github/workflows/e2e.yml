name: E2E

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths: 
      - 'docker/**'
      - .github/workflows/e2e.yml
      - src/seed/seed_db.ts
      - src/scripts/download-new-songs.ts
      - src/seed/bootstrap.ts
      - start.sh

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      DB_PASS_CI: kmq_ci_password
      DB_USER_CI: root
      DB_PORT: 3306
      AUDIO_SONGS_PER_ARTIST: 10
      PREMIUM_AUDIO_SONGS_PER_ARTIST: 10
    steps:
      - name: Checkout KMQ_Discord
        uses: actions/checkout@v2
      - name: Copy .env for CI
        env:
          BOT_TOKEN: ${{ secrets.KMQ_CI_BOT_TOKEN }}
        run: |
          echo "DB_USER=$DB_USER_CI" >> docker/.env
          echo "DB_PASS=$DB_PASS_CI" >> docker/.env
          echo "DB_PORT=$DB_PORT" >> docker/.env
          echo "DB_HOST=db" >> docker/.env
          echo "BOT_TOKEN=$BOT_TOKEN" >> docker/.env
          echo "AUDIO_SONGS_PER_ARTIST=$AUDIO_SONGS_PER_ARTIST" >> docker/.env
          echo "PREMIUM_AUDIO_SONGS_PER_ARTIST=$PREMIUM_AUDIO_SONGS_PER_ARTIST" >> docker/.env
      - name: Build and bootstrap dry-run
        run: npm run docker-dryrun
      - name: Post-bootstrap dry-run
        run: npm run docker-dryrun
      - name: Anchore Container Scan
        # You may pin to the exact commit or the version.
        # uses: anchore/scan-action@3c947f31798e0e3e9fa2bf18282aeb57a1a4aaa5
        uses: anchore/scan-action@v2.0.4
        with:
          image: kmq-dev-bot
          fail-build: false
