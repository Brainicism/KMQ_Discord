name: GCI

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths-ignore: 
      - 'images/**'
      - 'sql/analytics/**'
      - '**.md'
      - 'docs/**'
  pull_request_target:
    types: [labeled]


jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: contains(github.event.pull_request.labels.*.name, 'safe to test')
    env:
      DB_PASS_CI: kmq_ci_password
      DB_USER_CI: root
      DB_PORT: 3306
      AUDIO_SONGS_PER_ARTIST: 10
      PREMIUM_AUDIO_SONGS_PER_ARTIST: 10
    steps:
      - name: Checkout KMQ_Discord
        uses: actions/checkout@v2
      - name: Check for undocumented game option commands
        run: src/ci_checks/check_help.sh
      - name: Setup Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Check for newly introduced environment variables
        run: python src/ci_checks/check_env_var.py
      - name: Copy .env for CI
        env:
          BOT_TOKEN: ${{ secrets.KMQ_CI_BOT_TOKEN }}
        run: |
          echo "DB_USER=$DB_USER_CI" >> docker/.env
          echo "DB_PASS=$DB_PASS_CI" >> docker/.env
          echo "DB_PORT=$DB_PORT" >> docker/.env
          echo "DB_HOST=db" >> docker/.env
          echo "BOT_TOKEN=$BOT_TOKEN" >> docker/.env
          echo "AUDIO_SONGS_PER_ARTIST=$AUDIO_SONGS_PER_ARTIST" >> docker/.env
          echo "PREMIUM_AUDIO_SONGS_PER_ARTIST=$PREMIUM_AUDIO_SONGS_PER_ARTIST" >> docker/.env
      - name: Build and bootstrap dry-run
        run: npm run docker-dryrun
      - name: Post-bootstrap dry-run
        run: npm run docker-dryrun
